name: Build Wheels

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_wheels:
    runs-on: ${{ matrix.os[0] }}
    strategy:
      matrix:
        os: 
        - [ubuntu-20.04, manylinux_x86_64]
        - [ubuntu-20.04, manylinux_aarch64]
        - [ubuntu-20.04, manylinux_i686]
        - [ubuntu-20.04, musllinux_x86_64]
        - [ubuntu-20.04, musllinux_aarch64]
        python-version: [3.10, 3.11]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.14.1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install dependencies from requirements.txt

      - name: Test with pytest
        run: |
          python -m unittest

      - name: Build wheels
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.os[1] }}#cp3?-*  # Builds for Python 3.x (excluding 3.6)
          CIBW_PRERELEASE_PYTHONS: True
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ENVIRONMENT: CFLAGS='-O3 -g0 -mtune=generic -pipe -fPIC' LDFLAGS='-fPIC'
          #CIBW_TEST_REQUIRES: pytest  # Replace with actual test dependencies
          #CIBW_TEST_COMMAND: "python -m unittest"  # Replace with your test command
        run: cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: built-wheels
          path: wheelhouse/*.whl
